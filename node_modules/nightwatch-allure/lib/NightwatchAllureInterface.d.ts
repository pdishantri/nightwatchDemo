/// <reference types="node" />
import { AllureReporter } from "./AllureReporter";
import { Allure, StepInterface } from "./allure/Allure";
import { ContentType, Status } from "./allure/model";
import { StepWrapper } from "./StepWrapper";
import { AllureTest } from "./allure/AllureTest";
import { ExecutableItemWrapper } from "./allure/ExecutableItemWrapper";
import { AllureRuntime } from "./allure/AllureRuntime";
export declare class NightwatchAllureInterface extends Allure {
    private readonly reporter;
    constructor(reporter: AllureReporter, runtime: AllureRuntime);
    step<T>(name: string, body: (step: StepInterface) => any): any;
    logStep(name: string, status?: Status): void;
    attachment(name: string, content: Buffer | string, type: ContentType): void;
    testAttachment(name: string, content: Buffer | string, type: ContentType): void;
    startStep(name: string): StepWrapper;
    protected get currentTest(): AllureTest;
    protected get currentExecutable(): ExecutableItemWrapper;
}
