/// <reference types="node" />
import { NightwatchAllureInterface } from "./NightwatchAllureInterface";
import * as Models from "./model";
import { ContentType, Status } from "./allure/model";
import { AllureTest } from "./allure/AllureTest";
import { AllureStep } from "./allure/ExecutableItemWrapper";
import { AllureGroup } from "./allure/AllureGroup";
import { AllureRuntime } from "./allure/AllureRuntime";
export declare class AllureReporter {
    private runtime;
    private suites;
    private steps;
    private runningTest;
    constructor(runtime: AllureRuntime);
    getInterface(): NightwatchAllureInterface;
    get currentSuite(): AllureGroup | null;
    get currentStep(): AllureStep | null;
    get currentTest(): AllureTest | null;
    set currentTest(test: AllureTest | null);
    startSuite(suiteName: string): void;
    endSuite(): void;
    startCase(test: Models.NightwatchTest): void;
    passTestCase(test: Models.NightwatchTest): void;
    pendingTestCase(test: Models.NightwatchTest): void;
    partialTestCase(test: Models.NightwatchTest): void;
    failTestCase(test: Models.NightwatchTest, error: Error): void;
    writeAttachment(content: Buffer | string, type: ContentType): string;
    setTestStatus(status: Status): void;
    setTestDescription(description: string): void;
    setTestDetailsTrace(detailsTrace: string): void;
    setTestDetailsMessage(detailsMessage: string): void;
    addTestAttachment(name: string, content: Buffer | string, type: ContentType): void;
    pushStep(step: AllureStep): void;
    popStep(): void;
    pushSuite(suite: AllureGroup): void;
    popSuite(): void;
    completeTest(): void;
    private endTest;
}
